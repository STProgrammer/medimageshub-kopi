# Generated by Django 4.0.3 on 2022-05-23 20:05

import dicoms.validators
from django.db import migrations, models
import django_countries.fields
import medimageshub.storagebackends


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('comment_time', models.DateTimeField(auto_now_add=True)),
                ('image_url', models.ImageField(blank=True, null=True, storage=medimageshub.storagebackends.PrivateMediaStorage(), upload_to='screenshots/')),
            ],
            options={
                'ordering': ['comment_time'],
            },
        ),
        migrations.CreateModel(
            name='DicomFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_url', models.FileField(storage=medimageshub.storagebackends.PrivateMediaStorage(), upload_to='dicoms/', validators=[dicoms.validators.validate_file_extension])),
                ('file_title', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True)),
                ('picture_date', models.DateField()),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('file_size', models.IntegerField()),
                ('modality', models.CharField(choices=[('vary', 'Varying modalities'), ('CR', 'Computed Radiography'), ('CT', 'Computed Tomography'), ('MR', 'Magnetic Resonance'), ('US', 'Ultrasound'), ('BT', 'Biomagnetic imaging'), ('CD', 'Color flow Doppler'), ('DD', 'Duplex Doppler'), ('DG', 'Diaphanography'), ('ES', 'Endoscopy'), ('LS', 'Laser surface scan'), ('PT', 'Positron emission tomography (PET)'), ('RG', 'Radiographic imaging (conventional film/screen)'), ('ST', 'Single-photon emission computed tomography (SPECT)'), ('TG', 'Thermography'), ('XA', 'X-Ray Angiography'), ('RF', 'Radio Fluoroscopy'), ('RTIMAGE', 'Radiotherapy Image'), ('RTDOSE', 'Radiotherapy Dose'), ('RTSTRUCT', 'Radiotherapy Structure Set'), ('RTPLAN', 'Radiotherapy Plan'), ('RTRECORD', 'RT Treatment Record'), ('HC', 'Hard Copy'), ('DX', 'Digital Radiography'), ('NM', 'Nuclear Medicine'), ('MG', 'Mammography'), ('IO', 'Intra-oral Radiography'), ('PX', 'Panoramic X-Ray'), ('GM', 'General Microscopy'), ('SM', 'Slide Microscopy'), ('XC', 'External-camera Photography'), ('PR', 'Presentation State'), ('AU', 'Audio ECG'), ('EPS', 'ccrdiac Electrophysiology'), ('HD', 'Hemodynamic Waveform'), ('SR', 'SR Document'), ('IVUS', 'Intravascular Ultrasound'), ('OP', 'Ophthalmic Photography'), ('SMR', 'Stereometric Relationship'), ('OT', 'Other')], max_length=10)),
            ],
            options={
                'ordering': ['upload_date'],
            },
        ),
        migrations.CreateModel(
            name='DicomFile_User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['added_time'],
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=128)),
                ('last_name', models.CharField(max_length=128)),
                ('address', models.CharField(max_length=255)),
                ('postal_code', models.CharField(max_length=24)),
                ('city', models.CharField(max_length=64)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('phone_nr', models.CharField(blank=True, max_length=32)),
                ('birth_date', models.DateField()),
                ('gender', models.IntegerField(choices=[(0, 'Unknown'), (1, 'Male'), (2, 'Female'), (9, 'Not applicable')], default=0)),
                ('height', models.FloatField(blank=True)),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
            },
        ),
    ]
