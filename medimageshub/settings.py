"""
Django settings for medimageshub project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os
from os import environ as env

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_g_j5ojsppc!qt7&ii9rph=mh_vwb_q3f*qo4$i$6a0ngyd3xx'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'http://localhost',
    'http://127.0.0.1',
    '127.0.0.1',
    'localhost',
]


# Application definition
INSTALLED_APPS = [
    'users.apps.UsersConfig',
    'dicoms.apps.DicomsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_countries',
    'storages',
    'corsheaders',
    'django_filters',
    'django_cleanup.apps.CleanupConfig',
    'django_select2',
    'crispy_forms',
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:8080",
    "http://127.0.0.1:8000",
    #"https://storages.backends.s3boto3.S3Boto3Storage",
]

CORS_ALLOW_ALL_ORIGINS = False

CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]

CSRF_TRUSTED_ORIGINS = [
    'https://medimageshub.azurewebsites.net',
    'https://medimageshub.azurewebsites.net',
    'http://localhost',
    'http://127.0.0.1',
    'http://167.172.33.125',
    ]

ROOT_URLCONF = 'medimageshub.urls'

MEDIA_ROOT = os.path.join(BASE_DIR,'media')

MEDIA_URL = '/media/'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'medimageshub.wsgi.application'


### DATABASE SETTINGS ###
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'medimageshubdb',
#         'USER': 'postgres',
#         'PASSWORD': 'asdfgh',
#         'HOST': 'localhost',
#         'PORT': '5432',
#     }
# }


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': env['DBNAME'],
#         'USER': env['DBUSER'],
#         'PASSWORD': env['DBPASS'],
#         'HOST': env['DBHOST'],
#         'PORT': '5432',
#     }
# }


CRISPY_TEMPLATE_PACK = 'bootstrap4'

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


#### STATIC FILES ####


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

BASE_DIR = Path(__file__).resolve().parent.parent

STATIC_URL = '/static/'

STATICFILES_DIRS = [os.path.join(BASE_DIR,'static/')]

STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")


STATICFILES_FINDERS = (
  'django.contrib.staticfiles.finders.FileSystemFinder',
  'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)



#STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.User'

LOGIN_REDIRECT_URL = 'users:dashboard'

LOGOUT_REDIRECT_URL = 'users:home'


#### REDIS AND SELECT2 SETTINGS ####

CACHES = {
    # … default cache config and others
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': '/var/tmp/django_cache',
    },
    'select2': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': '/var/tmp/django_cache',
    }
}



# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
#         'LOCATION': '/var/tmp/django_cache',
#     }
# }

# CACHES = {
#     # … default cache config and others
#     'default': {
#         'BACKEND': 'django.core.cache.backends.redis.RedisCache',
#         'LOCATION': '127.0.0.1:11211',
#         #'LOCATION': env['CACHE_DEFAULT'],
#     },
#     'select2': {
#         'BACKEND': 'django_redis.cache.RedisCache',
#         'LOCATION': '127.0.0.1:11211',
#         'OPTIONS': {
#             'CLIENT_CLASS': 'django_redis.client.DefaultClient',
#         }
#     }
# }


# Tell select2 which cache configuration to use:
SELECT2_CACHE_BACKEND = "default"




#### EMAIL SETTINGS ####

EMAIL_HOST = "localhost"
EMAIL_PORT = 1025


# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = env['EMAIL_HOST']
# EMAIL_HOST_USER = env['EMAIL_HOST_USER']
# EMAIL_HOST_PASSWORD = env['EMAIL_HOST_PASSWORD']
# EMAIL_USE_TLS = True
# EMAIL_PORT = env['EMAIL_PORT']


#### AMAZON S3 BUCKET CONFIG ####


# S3 Storage Configurations
# AWS_ACCESS_KEY_ID = env['AWS_ACCESS_KEY_ID']
# AWS_SECRET_ACCESS_KEY = env['AWS_SECRET_ACCESS_KEY']
# AWS_STORAGE_BUCKET_NAME = env['AWS_STORAGE_BUCKET_NAME']
# AWS_S3_CUSTOM_DOMAIN = "%s.s3.amazonaws.com" % AWS_STORAGE_BUCKET_NAME
# AWS_DEFAULT_ACL = None
# AWS_S3_OBJECT_PARAMETERS = {
#     "CacheControl": "max-age=86400",
# }
# AWS_S3_REGION_NAME = "eu-north-1"
# AWS_S3_SIGNATURE_VERSION = "s3v4"
# AWS_LOCATION = "static"
# S3_URL = "https://%s" % AWS_S3_CUSTOM_DOMAIN

# AWS_QUERYSTRING_AUTH = True

# # public media settings
# DEFAULT_FILE_STORAGE = "medimageshub.storage_backends.PublicMediaStorage"
# MEDIA_DIRECTORY = "/media/"
# MEDIA_URL = S3_URL + MEDIA_DIRECTORY

# # private media settings
# PRIVATE_MEDIA_LOCATION = env['PRIVATE_MEDIA_LOCATION']
# PRIVATE_FILE_STORAGE = env['PRIVATE_FILE_STORAGE']

# # Link expiration time in seconds
# AWS_QUERYSTRING_EXPIRE = "3600"